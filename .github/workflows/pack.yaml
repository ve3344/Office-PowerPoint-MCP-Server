name: Pack Python Environment for Offline Deployment

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  pack-environment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        
    - name: Install project dependencies
      run: python setup_mcp.py
        
    - name: Create portable environment package
      run: |
        mkdir -p python-env-package
        pip download -r requirements.txt -d python-env-package/packages/
        cp requirements.txt python-env-package/
        tar -czf python-environment.tar.gz python-env-package/
        
    - name: Upload environment package
      uses: actions/upload-artifact@v4
      with:
        name: python-offline-environment
        path: python-environment.tar.gz
        retention-days: 30
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        name: Python Environment Package v${{ github.run_number }}
        body: |
          Python环境离线部署包
          
          包含：
          - 所有依赖包的wheel文件
          - requirements.txt清单文件
          
          下载后使用pip离线安装即可：
          pip install --no-index --find-links packages -r requirements.txt
        draft: false
        prerelease: false
        files: python-environment.tar.gz

  pack-conda-environment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.9'
        
    - name: Create conda environment
      run: |
        if [ -f environment.yml ]; then
          conda env create -f environment.yml
        elif [ -f requirements.txt ]; then
          conda create --name myenv python=3.9 --yes
          conda activate myenv
          pip install -r requirements.txt
        else
          conda create --name myenv python=3.9 --yes
          conda activate myenv
        fi
        
    - name: Export conda environment
      run: |
        conda activate myenv
        conda env export > conda-environment.yml
        
    - name: Pack conda environment
      run: |
        conda install -c conda-forge conda-pack --yes
        conda-pack -n myenv -o conda-environment.tar.gz
        
    - name: Upload conda package
      uses: actions/upload-artifact@v4
      with:
        name: conda-offline-environment
        path: conda-environment.tar.gz
        retention-days: 30
